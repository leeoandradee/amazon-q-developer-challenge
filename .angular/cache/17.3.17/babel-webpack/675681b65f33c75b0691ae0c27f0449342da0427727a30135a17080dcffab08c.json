{"ast":null,"code":"import _asyncToGenerator from \"/workspaces/amazon-q-developer-challenge/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/mcp.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"small\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵclassMap(message_r1.isUser ? \"message user-message\" : \"message ai-message\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r1.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(5, 4, message_r1.timestamp, \"HH:mm\"));\n  }\n}\nexport class ChatComponent {\n  constructor(mcpService) {\n    this.mcpService = mcpService;\n    this.messages = [{\n      content: 'Olá! Sou seu agente de migração. Cole seu código ou me diga o que precisa migrar entre linguagens.',\n      isUser: false,\n      timestamp: new Date()\n    }];\n    this.currentMessage = '';\n    this.isLoading = false;\n    this.fromLanguage = 'java';\n    this.toLanguage = 'typescript';\n  }\n  sendMessage() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.currentMessage.trim()) return;\n      _this.messages.push({\n        content: _this.currentMessage,\n        isUser: true,\n        timestamp: new Date()\n      });\n      const userMessage = _this.currentMessage;\n      _this.currentMessage = '';\n      _this.isLoading = true;\n      try {\n        const response = yield _this.mcpService.sendMigrationRequest(userMessage, _this.fromLanguage, _this.toLanguage);\n        _this.messages.push({\n          content: response,\n          isUser: false,\n          timestamp: new Date()\n        });\n      } catch (error) {\n        _this.messages.push({\n          content: 'Erro na conexão. Simulando resposta: Aqui está a migração do seu código...',\n          isUser: false,\n          timestamp: new Date()\n        });\n      }\n      _this.isLoading = false;\n    })();\n  }\n  static {\n    this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.McpService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 30,\n      vars: 7,\n      consts: [[1, \"chat-container\"], [1, \"language-selector\"], [3, \"ngModelChange\", \"ngModel\"], [\"value\", \"java\"], [\"value\", \"python\"], [\"value\", \"javascript\"], [\"value\", \"csharp\"], [\"value\", \"typescript\"], [\"value\", \"go\"], [1, \"messages\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-area\"], [\"placeholder\", \"Cole seu c\\u00F3digo ou descreva o que precisa migrar...\", 3, \"ngModelChange\", \"keyup.enter\", \"ngModel\", \"disabled\"], [3, \"click\", \"disabled\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\");\n          i0.ɵɵtext(3, \"De: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"select\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatComponent_Template_select_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.fromLanguage, $event) || (ctx.fromLanguage = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(5, \"option\", 3);\n          i0.ɵɵtext(6, \"Java\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"option\", 4);\n          i0.ɵɵtext(8, \"Python\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"option\", 5);\n          i0.ɵɵtext(10, \"JavaScript\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"option\", 6);\n          i0.ɵɵtext(12, \"C#\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"label\");\n          i0.ɵɵtext(14, \" Para: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"select\", 2);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatComponent_Template_select_ngModelChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.toLanguage, $event) || (ctx.toLanguage = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(16, \"option\", 7);\n          i0.ɵɵtext(17, \"TypeScript\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"option\", 4);\n          i0.ɵɵtext(19, \"Python\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"option\", 3);\n          i0.ɵɵtext(21, \"Java\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"option\", 8);\n          i0.ɵɵtext(23, \"Go\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"div\", 9);\n          i0.ɵɵtemplate(25, ChatComponent_div_25_Template, 6, 7, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 11)(27, \"input\", 12);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatComponent_Template_input_ngModelChange_27_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.currentMessage, $event) || (ctx.currentMessage = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"keyup.enter\", function ChatComponent_Template_input_keyup_enter_27_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_28_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵtext(29);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.fromLanguage);\n          i0.ɵɵadvance(11);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.toLanguage);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.currentMessage);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading || !ctx.currentMessage.trim());\n          i0.ɵɵadvance();\n          i0.ɵɵtextInterpolate1(\" \", ctx.isLoading ? \"...\" : \"Enviar\", \" \");\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, i2.DatePipe, FormsModule, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵclassMap","message_r1","isUser","ɵɵadvance","ɵɵtextInterpolate","content","ɵɵpipeBind2","timestamp","ChatComponent","constructor","mcpService","messages","Date","currentMessage","isLoading","fromLanguage","toLanguage","sendMessage","_this","_asyncToGenerator","trim","push","userMessage","response","sendMigrationRequest","error","ɵɵdirectiveInject","i1","McpService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ChatComponent_Template","rf","ctx","ɵɵtwoWayListener","ChatComponent_Template_select_ngModelChange_4_listener","$event","ɵɵtwoWayBindingSet","ChatComponent_Template_select_ngModelChange_15_listener","ɵɵtemplate","ChatComponent_div_25_Template","ChatComponent_Template_input_ngModelChange_27_listener","ɵɵlistener","ChatComponent_Template_input_keyup_enter_27_listener","ChatComponent_Template_button_click_28_listener","ɵɵtwoWayProperty","ɵɵproperty","ɵɵtextInterpolate1","i2","NgForOf","DatePipe","i3","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgModel","encapsulation"],"sources":["/workspaces/amazon-q-developer-challenge/src/app/components/chat/chat.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { McpService } from '../../services/mcp.service';\n\ninterface Message {\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\n@Component({\n  selector: 'app-chat',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"chat-container\">\n      <div class=\"language-selector\">\n        <label>De: </label>\n        <select [(ngModel)]=\"fromLanguage\">\n          <option value=\"java\">Java</option>\n          <option value=\"python\">Python</option>\n          <option value=\"javascript\">JavaScript</option>\n          <option value=\"csharp\">C#</option>\n        </select>\n        <label> Para: </label>\n        <select [(ngModel)]=\"toLanguage\">\n          <option value=\"typescript\">TypeScript</option>\n          <option value=\"python\">Python</option>\n          <option value=\"java\">Java</option>\n          <option value=\"go\">Go</option>\n        </select>\n      </div>\n\n      <div class=\"messages\">\n        <div *ngFor=\"let message of messages\" \n             [class]=\"message.isUser ? 'message user-message' : 'message ai-message'\">\n          <div>{{ message.content }}</div>\n          <small>{{ message.timestamp | date:'HH:mm' }}</small>\n        </div>\n      </div>\n\n      <div class=\"input-area\">\n        <input \n          [(ngModel)]=\"currentMessage\" \n          (keyup.enter)=\"sendMessage()\"\n          placeholder=\"Cole seu código ou descreva o que precisa migrar...\"\n          [disabled]=\"isLoading\">\n        <button (click)=\"sendMessage()\" [disabled]=\"isLoading || !currentMessage.trim()\">\n          {{ isLoading ? '...' : 'Enviar' }}\n        </button>\n      </div>\n    </div>\n  `\n})\nexport class ChatComponent {\n  messages: Message[] = [{\n    content: 'Olá! Sou seu agente de migração. Cole seu código ou me diga o que precisa migrar entre linguagens.',\n    isUser: false,\n    timestamp: new Date()\n  }];\n  \n  currentMessage = '';\n  isLoading = false;\n  fromLanguage = 'java';\n  toLanguage = 'typescript';\n\n  constructor(private mcpService: McpService) {}\n\n  async sendMessage() {\n    if (!this.currentMessage.trim()) return;\n\n    this.messages.push({\n      content: this.currentMessage,\n      isUser: true,\n      timestamp: new Date()\n    });\n\n    const userMessage = this.currentMessage;\n    this.currentMessage = '';\n    this.isLoading = true;\n\n    try {\n      const response = await this.mcpService.sendMigrationRequest(\n        userMessage, \n        this.fromLanguage, \n        this.toLanguage\n      );\n      \n      this.messages.push({\n        content: response,\n        isUser: false,\n        timestamp: new Date()\n      });\n    } catch (error) {\n      this.messages.push({\n        content: 'Erro na conexão. Simulando resposta: Aqui está a migração do seu código...',\n        isUser: false,\n        timestamp: new Date()\n      });\n    }\n\n    this.isLoading = false;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}